spring:
  config:
    activate:
      on-profile: prod
  servlet:
    multipart:
      max-file-size: 10MB        # 추가: 단일 파일 최대 크기
      max-request-size: 15MB     # 추가: 전체 요청 최대 크기 (여러 파일 고려)
      file-size-threshold: 2KB   # 추가: 메모리 저장 임계값
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC;
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari: # t3.micro 환경에 맞게 hikari pool 설정
      maximum-pool-size: 5  # vCPU * 2 + 1 = 5
      minimum-idle: 2       # 최소한의 idle 커넥션만 유지
      idle-timeout: 300000  # 5분 (기본값 10분에서 줄임)
      connection-timeout: 20000  # 20초
      max-lifetime: 1200000     # 20분 (기본값 30분에서 줄임)
  jpa:
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

    properties:
      hibernate:
        show_sql: false # Production 환경에서 로깅 OFF
        format_sql: false
        use_sql_comments: false
        default_schema: public

springdoc:
  swagger-ui:
    path: /api-docs
    operations-sorter: alpha
  api-docs:
    path: /api-docs
    groups:
      enabled: true


server:
  servlet:
    context-path: /v2

aws:
  region: ap-northeast-2
  credentials:
    access-key: ${AWS_ACCESS_KEY_ID}
    secret-key: ${AWS_SECRET_ACCESS_KEY}
  bucket:
    image: ${BUCKET_NAME}
    dir: production/

internal:
  playground:
    url: ${PLAYGROUND_API_URL}
    token: ${PLAYGROUND_API_URL_JWT_TOKEN}
  crew:
    url: ${CREW_API_URL}
    token: ${CREW_API_URL_JWT_TOKEN}

  auth:
    url: https://auth.api.sopt.org
    api-key: ${AUTH_API_KEY}
    service-name: ${OUR_SERVICE_NAME}

jwt:
  access: ${ACCESS_TOKEN_SECRET}
  refresh: ${REFRESH_TOKEN_SECRET}
  admin: ${ADMIN_TOKEN_SECRET}

official:
  apikey: ${OFFICIAL_API_KEY}
